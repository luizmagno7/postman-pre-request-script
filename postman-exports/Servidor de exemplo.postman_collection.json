{
	"info": {
		"_postman_id": "2c1f22c7-ae9a-45b6-8361-7926d3e3d4ce",
		"name": "Servidor de exemplo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16458088"
	},
	"item": [
		{
			"name": "login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n        \"access_token\": \"MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3\",\n        \"token_type\": \"Bearer\",\n        \"expires_in\": 3600,\n        \"refresh_token\": \"IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk\",\n        \"scope\": \"create\"\n    }"
				}
			]
		},
		{
			"name": "products",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "[{\n      \"title\": \"Brown eggs\",\n      \"type\": \"dairy\",\n      \"description\": \"Raw organic brown eggs in a basket\",\n      \"filename\": \"0.jpg\",\n      \"height\": 600,\n      \"width\": 400,\n      \"price\": 28.1,\n      \"rating\": 4\n  }, {\n      \"title\": \"Sweet fresh stawberry\",\n      \"type\": \"fruit\",\n      \"description\": \"Sweet fresh stawberry on the wooden table\",\n      \"filename\": \"1.jpg\",\n      \"height\": 450,\n      \"width\": 299,\n      \"price\": 29.45,\n      \"rating\": 4\n  }, {\n      \"title\": \"Asparagus\",\n      \"type\": \"vegetable\",\n      \"description\": \"Asparagus with ham on the wooden table\",\n      \"filename\": \"2.jpg\",\n      \"height\": 450,\n      \"width\": 299,\n      \"price\": 18.95,\n      \"rating\": 3\n  }]"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Pega a url de base do Mock Server",
					"const baseUrl = pm.environment.get('baseUrl');",
					"",
					"//Opções para a requisição de login",
					"const options = {",
					"    url: baseUrl + \"/login\",",
					"    method: \"POST\",",
					"    header: {",
					"        'Accept': '*/*',",
					"        'Content-Type': 'application/x-www-form-urlencoded',",
					"    },",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            { key: 'secret_key', value: pm.environment.get('secret_key') },",
					"            { key: 'client_secret', value: pm.environment.get('client_secret') },",
					"        ]",
					"    }",
					"}",
					"",
					"//Chamada para a requisição de autenticação",
					"pm.sendRequest(options, (err, res) => {",
					"    //converte o retorno em JSON",
					"    const data = res.json();",
					"    console.log(data); ",
					"    // Resultado do console",
					"    // access_token: \"MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3\"",
					"    // token_type: \"Bearer\"",
					"    // expires_in: 3600",
					"    // refresh_token: \"IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk\"",
					"    // scope: \"create\"",
					"",
					"    //atualiza o valor da variável \"accessToken\" com o token que retornou na requisição",
					"    pm.environment.set('accessToken', data.access_token);",
					"})"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}